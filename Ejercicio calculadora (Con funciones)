#include <stdio.h>

void menu(){
    printf("Si desea sumar: (1)\n");
    printf("Si desea restar: (2)\n");
    printf("Si desea multiplicar: (3)\n");
    printf("Si desea dividir: (4)\n");
}
int suma(int op1, int op2){ //declaro la funcion
    op1 += op2;
    return op1;
}
int resta(int op1, int op2){ //declaro la funcion
    op1 -= op2;
    return op1;
}
int multiplicacion(int op1, int op2){ //declaro la funcion
    int res= op1 * op2;
    return res;
}
int division(int op1, int op2){ //declaro la funcion
    int res = op1 / op2;
    return res;
}

int seleccion(int dato){ //declaro la funcion
    int a=0;
    int b=0; 
    int resultado = 0;
    printf("Ingresa los valores a operar: ");    
    scanf("%i",&a);   
    scanf("%i",&b);  

    switch(dato){
    case 1:
      resultado = suma(a,b);
      break;
    case 2:
      resultado = resta(a,b);
      break;
    case 3:
      resultado = multiplicacion(a,b);  
      break;
    case 4:
      resultado = division(a,b);  
      break;  
    default: printf("Elegi bien");
      break;
    }
    return resultado;
}
int main(){
    printf("Bienvenidos a la calculadora\n");
    menu(); // Llamo a la funcion menu
    int opcion= 0; // Creo la variable opcion para llamar dentro de la funcion seleccion, donde estan mis operadores
    scanf("%i",&opcion); 
    int resultado = seleccion(opcion); // Llamo la funcion seleccion, teniendo en cuenta la variable opcion para el switch
    printf("El resultado es: %i",resultado); 
return 0; 
}

# Calculo de Areas con funciones #

#include <stdio.h>

void cuadrado();
void menu ();
void circulo();
void rectangulo();
void trapecio();
void triangulo();

int main(){
    menu();
return 0;
}

void menu (){
    int seleccion;
    printf("Ingresa un valor\n================\n1.Cuadrado\n2.Circulo\n3.Rectangulo\n4.Trapecio\n5.Triangulo\n0.Salir del programa\n\nSeleccion: ");
    scanf("%d",&seleccion);
    switch(seleccion){
        case 1:
            cuadrado();
            break;
            case 2:
            circulo();
            break;
        case 3:
            rectangulo();
            break;
        case 4:
            trapecio();
            break;
        case 5:
            triangulo();
            break;

        case 0:break;

    }
}

void cuadrado(){
    float lado, area;

    printf("\nIngresa la medida de cualquiera de sus lados: ");
    scanf("%f",&lado);

    area = lado*lado;

    printf("El area es: %.2f\n", area);
    }

void circulo(){
    float radio, area;
    float pi = 3.141518;

    printf("\nIngresa el radio: ");
    scanf("%f",&radio);

    area = pi*(radio*radio);

    printf("El area es: %.2f\n", area);
    }

void rectangulo(){
    float lado1,lado2, area;

    printf("\nIngresa alto del rectangulo: ");
    scanf("%f",&lado1);
    printf("\nAhora ingresa el ancho: ");
    scanf("%f",&lado2);

    area = lado2*lado1;

    printf("El area es: %.2f\n", area);
    }

void trapecio(){
    float base1,base2,area,altura;

    printf("\nIngresa la primera de las bases del trapecio: ");
    scanf("%f",&base1);
    printf("\nIngresa la segunda de las bases del trapecio: ");
    scanf("%f",&base2);
    printf("\nAhora ingresa el alto: ");
    scanf("%f",&altura);

    area = ((base1 + base2)*altura/2);

    printf("El area es: %.2f\n", area);
    }

void triangulo(){
    float base,area,altura;

    printf("\nIngresa la base del triangulo: ");
    scanf("%f",&base);
    printf("\nAhora ingresa la altura: ");
    scanf("%f",&altura);

    area = (base*altura)/2;

    printf("El area es: %.2f\n", area);
    }
# PRacticas #

#include<stdio.h>

/*Completar el ejercicio*/

/*Carga del vector*/
void carga_vector(int v[], int d){
int i;
for(i = 0; i < d ; i++){
    printf("Ingrese valor en v[%d]\n", i) ;
    scanf("%d", &v[i]);
 }
}
/*emisión del contenido del vector*/
void emite_vector(int v[], int d){
int i;
for(i = 0; i < d ; i++)
     printf("v[%d]=%d\n", i, v[i]);
}
/*Suma de los elementos del vector*/
int suma_vector(int v[], int d){
int i,suma=0;

for(i = 0; i < d ; i++)
     suma = suma + v[i];

  return suma;
}

/*emisión de los elementos en las posiciones pares*/
void elem_pos_impar(int v[], int d){
int i;
printf("\nLos elementos en las posiciones impares son:\n");
for(i = 0; i < d ; i++){
    if (i%2 == 1)
         printf("v[%d]=%d\n", i, v[i]);
}
}

int puntoc(int dim, int v[]){
    int minimo;
    minimo = v[0];
    for (int i=1; i<dim; i++){
        if (minimo > v [i])
            minimo = v[i];
    }
    return minimo;
}

void puntoe(int dim, int v[]) {
    int maximo = v[0];
    int cantVeces = 0;
    int aux[dim];
    for (int i=0, i<dim, i++){
        if (maximo < v[i]) {
            maximo = v[i];
            cantVeces = 1;   
        }
        if (maximo = v[i]) {
            cantVeces++;
            aux[i] = maximo;
        }
    
    }
    
    
}


void puntod (int dim, int v[]){
    int promedio, suma=0;

    for (int i=0; i<dim; i++){
        suma += v[i];
    }
    promedio = suma/dim;
    printf("El promedio es %d\n", promedio);

    printf("Los numeros mayores al promedio son:\n");
    for(int i=0; i<dim; i++){
        if(v[i] > promedio)
        printf("%d\n",v[i]);
    }
}

int main(){
  const int dim = 5;
  int v[dim];
  int suma, minimo;

/*a.	Cargar un vector de m elementos por teclado.
Debes considerar que no podrá superar el máximo de elementos de vector (m=dimensión).*/
carga_vector(v,dim);
/*emitimos el contenido del vector para testear*/
emite_vector(v,dim);

/*b.	Calcular y emitir la suma de sus elementos. */
suma = suma_vector(v,dim);
printf("\nLa suma de los elementos del vector es %d\n", suma);

//c. Calcular y emitir el mínimo del vector.
minimo = puntoc(dim, v);
printf("El minimo es %d\n", minimo);
//d. Calcular y emitir el promedio de los valores del vector y los valores de aquellos que superaron ese promedio.
puntod(dim, v);
//e. Emitir el valor máximo, indicar la cantidad de veces que apareció y el número de orden en que fue ingresado.
maximo()
/*f.	Emitir los valores que son pares y los que están en posiciones impares (completar) */
elem_pos_impar(v,dim);

//g. Recorrer los elementos del vector hasta encontrar el número entero a que se ingresa por teclado.
// Deberá retornar el número de elementos que ha leído hasta encontrar a. Si no lo encontró emitir
// un mensaje al respecto.


getchar();
return 0;
}

